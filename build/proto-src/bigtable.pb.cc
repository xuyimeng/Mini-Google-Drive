// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bigtable.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bigtable.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bigtable {

namespace {

const ::google::protobuf::Descriptor* Position_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Position_reflection_ = NULL;
const ::google::protobuf::Descriptor* Value_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Value_reflection_ = NULL;
const ::google::protobuf::Descriptor* Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* Empty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Empty_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_bigtable_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_bigtable_2eproto() {
  protobuf_AddDesc_bigtable_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "bigtable.proto");
  GOOGLE_CHECK(file != NULL);
  Position_descriptor_ = file->message_type(0);
  static const int Position_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, col_),
  };
  Position_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Position_descriptor_,
      Position::default_instance_,
      Position_offsets_,
      -1,
      -1,
      -1,
      sizeof(Position),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, _is_default_instance_));
  Value_descriptor_ = file->message_type(1);
  static const int Value_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, val_),
  };
  Value_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Value_descriptor_,
      Value::default_instance_,
      Value_offsets_,
      -1,
      -1,
      -1,
      sizeof(Value),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, _is_default_instance_));
  Update_descriptor_ = file->message_type(2);
  static const int Update_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, new_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, old_val_),
  };
  Update_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Update_descriptor_,
      Update::default_instance_,
      Update_offsets_,
      -1,
      -1,
      -1,
      sizeof(Update),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, _is_default_instance_));
  Response_descriptor_ = file->message_type(3);
  static const int Response_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, msg_),
  };
  Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_descriptor_,
      Response::default_instance_,
      Response_offsets_,
      -1,
      -1,
      -1,
      sizeof(Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _is_default_instance_));
  Empty_descriptor_ = file->message_type(4);
  static const int Empty_offsets_[1] = {
  };
  Empty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Empty_descriptor_,
      Empty::default_instance_,
      Empty_offsets_,
      -1,
      -1,
      -1,
      sizeof(Empty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Empty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Empty, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_bigtable_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Position_descriptor_, &Position::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Value_descriptor_, &Value::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Update_descriptor_, &Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_descriptor_, &Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Empty_descriptor_, &Empty::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_bigtable_2eproto() {
  delete Position::default_instance_;
  delete Position_reflection_;
  delete Value::default_instance_;
  delete Value_reflection_;
  delete Update::default_instance_;
  delete Update_reflection_;
  delete Response::default_instance_;
  delete Response_reflection_;
  delete Empty::default_instance_;
  delete Empty_reflection_;
}

void protobuf_AddDesc_bigtable_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_bigtable_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016bigtable.proto\022\010bigtable\"$\n\010Position\022\013"
    "\n\003row\030\001 \001(\t\022\013\n\003col\030\002 \001(\t\"5\n\005Value\022\037\n\003pos"
    "\030\001 \001(\0132\022.bigtable.Position\022\013\n\003val\030\002 \001(\014\""
    ";\n\006Update\022 \n\007new_val\030\001 \001(\0132\017.bigtable.Va"
    "lue\022\017\n\007old_val\030\002 \001(\014\"\027\n\010Response\022\013\n\003msg\030"
    "\001 \001(\t\"\007\n\005Empty2\350\005\n\010BigTable\022)\n\003PUT\022\017.big"
    "table.Value\032\017.bigtable.Empty\"\000\022,\n\003GET\022\022."
    "bigtable.Position\032\017.bigtable.Value\"\000\022+\n\004"
    "CPUT\022\020.bigtable.Update\032\017.bigtable.Empty\""
    "\000\022/\n\006DELETE\022\022.bigtable.Position\032\017.bigtab"
    "le.Empty\"\000\0222\n\004Find\022\022.bigtable.Position\032\022"
    ".bigtable.Response\"\0000\001\0222\n\007ReadLog\022\022.bigt"
    "able.Response\032\017.bigtable.Value\"\0000\001\022+\n\005Ch"
    "eck\022\017.bigtable.Empty\032\017.bigtable.Empty\"\000\022"
    "4\n\016PutFromReplica\022\017.bigtable.Value\032\017.big"
    "table.Empty\"\000\0227\n\016Update_Primary\022\022.bigtab"
    "le.Position\032\017.bigtable.Empty\"\000\022A\n\030Update"
    "_Sever_Down_Status\022\022.bigtable.Response\032\017"
    ".bigtable.Empty\"\000\022\?\n\026Update_Sever_Up_Sta"
    "tus\022\022.bigtable.Response\032\017.bigtable.Empty"
    "\"\000\022/\n\tTerminate\022\017.bigtable.Empty\032\017.bigta"
    "ble.Empty\"\000\0224\n\tGetIpList\022\017.bigtable.Empt"
    "y\032\022.bigtable.Response\"\0000\001\0226\n\013GetDataList"
    "\022\017.bigtable.Empty\032\022.bigtable.Response\"\0000"
    "\001b\006proto3", 969);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bigtable.proto", &protobuf_RegisterTypes);
  Position::default_instance_ = new Position();
  Value::default_instance_ = new Value();
  Update::default_instance_ = new Update();
  Response::default_instance_ = new Response();
  Empty::default_instance_ = new Empty();
  Position::default_instance_->InitAsDefaultInstance();
  Value::default_instance_->InitAsDefaultInstance();
  Update::default_instance_->InitAsDefaultInstance();
  Response::default_instance_->InitAsDefaultInstance();
  Empty::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_bigtable_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_bigtable_2eproto {
  StaticDescriptorInitializer_bigtable_2eproto() {
    protobuf_AddDesc_bigtable_2eproto();
  }
} static_descriptor_initializer_bigtable_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Position::kRowFieldNumber;
const int Position::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Position::Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.Position)
}

void Position::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Position::Position(const Position& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bigtable.Position)
}

void Position::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  row_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:bigtable.Position)
  SharedDtor();
}

void Position::SharedDtor() {
  row_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Position::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Position::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Position_descriptor_;
}

const Position& Position::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bigtable_2eproto();
  return *default_instance_;
}

Position* Position::default_instance_ = NULL;

Position* Position::New(::google::protobuf::Arena* arena) const {
  Position* n = new Position;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.Position)
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.Position)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string row = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_row()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->row().data(), this->row().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.Position.row"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_col;
        break;
      }

      // optional string col = 2;
      case 2: {
        if (tag == 18) {
         parse_col:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col().data(), this->col().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.Position.col"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.Position)
  return false;
#undef DO_
}

void Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.Position)
  // optional string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.Position.row");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->row(), output);
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.Position.col");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->col(), output);
  }

  // @@protoc_insertion_point(serialize_end:bigtable.Position)
}

::google::protobuf::uint8* Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.Position)
  // optional string row = 1;
  if (this->row().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->row().data(), this->row().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.Position.row");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->row(), target);
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col().data(), this->col().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.Position.col");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->col(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bigtable.Position)
  return target;
}

int Position::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.Position)
  int total_size = 0;

  // optional string row = 1;
  if (this->row().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->row());
  }

  // optional string col = 2;
  if (this->col().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.Position)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Position* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.Position)
    MergeFrom(*source);
  }
}

void Position::MergeFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.Position)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.row().size() > 0) {

    row_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.row_);
  }
  if (from.col().size() > 0) {

    col_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_);
  }
}

void Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {

  return true;
}

void Position::Swap(Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Position::InternalSwap(Position* other) {
  row_.Swap(&other->row_);
  col_.Swap(&other->col_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Position::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Position_descriptor_;
  metadata.reflection = Position_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Position

// optional string row = 1;
void Position::clear_row() {
  row_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Position::row() const {
  // @@protoc_insertion_point(field_get:bigtable.Position.row)
  return row_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Position::set_row(const ::std::string& value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bigtable.Position.row)
}
 void Position::set_row(const char* value) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bigtable.Position.row)
}
 void Position::set_row(const char* value, size_t size) {
  
  row_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bigtable.Position.row)
}
 ::std::string* Position::mutable_row() {
  
  // @@protoc_insertion_point(field_mutable:bigtable.Position.row)
  return row_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Position::release_row() {
  // @@protoc_insertion_point(field_release:bigtable.Position.row)
  
  return row_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Position::set_allocated_row(::std::string* row) {
  if (row != NULL) {
    
  } else {
    
  }
  row_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), row);
  // @@protoc_insertion_point(field_set_allocated:bigtable.Position.row)
}

// optional string col = 2;
void Position::clear_col() {
  col_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Position::col() const {
  // @@protoc_insertion_point(field_get:bigtable.Position.col)
  return col_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Position::set_col(const ::std::string& value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bigtable.Position.col)
}
 void Position::set_col(const char* value) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bigtable.Position.col)
}
 void Position::set_col(const char* value, size_t size) {
  
  col_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bigtable.Position.col)
}
 ::std::string* Position::mutable_col() {
  
  // @@protoc_insertion_point(field_mutable:bigtable.Position.col)
  return col_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Position::release_col() {
  // @@protoc_insertion_point(field_release:bigtable.Position.col)
  
  return col_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Position::set_allocated_col(::std::string* col) {
  if (col != NULL) {
    
  } else {
    
  }
  col_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), col);
  // @@protoc_insertion_point(field_set_allocated:bigtable.Position.col)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value::kPosFieldNumber;
const int Value::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value::Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.Value)
}

void Value::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  pos_ = const_cast< ::bigtable::Position*>(&::bigtable::Position::default_instance());
}

Value::Value(const Value& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bigtable.Value)
}

void Value::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pos_ = NULL;
  val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Value::~Value() {
  // @@protoc_insertion_point(destructor:bigtable.Value)
  SharedDtor();
}

void Value::SharedDtor() {
  val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete pos_;
  }
}

void Value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Value::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Value_descriptor_;
}

const Value& Value::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bigtable_2eproto();
  return *default_instance_;
}

Value* Value::default_instance_ = NULL;

Value* Value::New(::google::protobuf::Arena* arena) const {
  Value* n = new Value;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Value::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.Value)
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.Value)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .bigtable.Position pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_val;
        break;
      }

      // optional bytes val = 2;
      case 2: {
        if (tag == 18) {
         parse_val:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_val()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.Value)
  return false;
#undef DO_
}

void Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.Value)
  // optional .bigtable.Position pos = 1;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pos_, output);
  }

  // optional bytes val = 2;
  if (this->val().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->val(), output);
  }

  // @@protoc_insertion_point(serialize_end:bigtable.Value)
}

::google::protobuf::uint8* Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.Value)
  // optional .bigtable.Position pos = 1;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pos_, false, target);
  }

  // optional bytes val = 2;
  if (this->val().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->val(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bigtable.Value)
  return target;
}

int Value::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.Value)
  int total_size = 0;

  // optional .bigtable.Position pos = 1;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // optional bytes val = 2;
  if (this->val().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->val());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.Value)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Value* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.Value)
    MergeFrom(*source);
  }
}

void Value::MergeFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.Value)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_pos()) {
    mutable_pos()->::bigtable::Position::MergeFrom(from.pos());
  }
  if (from.val().size() > 0) {

    val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_);
  }
}

void Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value::CopyFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value::IsInitialized() const {

  return true;
}

void Value::Swap(Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value::InternalSwap(Value* other) {
  std::swap(pos_, other->pos_);
  val_.Swap(&other->val_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Value::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Value_descriptor_;
  metadata.reflection = Value_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Value

// optional .bigtable.Position pos = 1;
bool Value::has_pos() const {
  return !_is_default_instance_ && pos_ != NULL;
}
void Value::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::bigtable::Position& Value::pos() const {
  // @@protoc_insertion_point(field_get:bigtable.Value.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
::bigtable::Position* Value::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::bigtable::Position;
  }
  // @@protoc_insertion_point(field_mutable:bigtable.Value.pos)
  return pos_;
}
::bigtable::Position* Value::release_pos() {
  // @@protoc_insertion_point(field_release:bigtable.Value.pos)
  
  ::bigtable::Position* temp = pos_;
  pos_ = NULL;
  return temp;
}
void Value::set_allocated_pos(::bigtable::Position* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bigtable.Value.pos)
}

// optional bytes val = 2;
void Value::clear_val() {
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Value::val() const {
  // @@protoc_insertion_point(field_get:bigtable.Value.val)
  return val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Value::set_val(const ::std::string& value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bigtable.Value.val)
}
 void Value::set_val(const char* value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bigtable.Value.val)
}
 void Value::set_val(const void* value, size_t size) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bigtable.Value.val)
}
 ::std::string* Value::mutable_val() {
  
  // @@protoc_insertion_point(field_mutable:bigtable.Value.val)
  return val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Value::release_val() {
  // @@protoc_insertion_point(field_release:bigtable.Value.val)
  
  return val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Value::set_allocated_val(::std::string* val) {
  if (val != NULL) {
    
  } else {
    
  }
  val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val);
  // @@protoc_insertion_point(field_set_allocated:bigtable.Value.val)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Update::kNewValFieldNumber;
const int Update::kOldValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Update::Update()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.Update)
}

void Update::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  new_val_ = const_cast< ::bigtable::Value*>(&::bigtable::Value::default_instance());
}

Update::Update(const Update& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bigtable.Update)
}

void Update::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  new_val_ = NULL;
  old_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Update::~Update() {
  // @@protoc_insertion_point(destructor:bigtable.Update)
  SharedDtor();
}

void Update::SharedDtor() {
  old_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete new_val_;
  }
}

void Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Update_descriptor_;
}

const Update& Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bigtable_2eproto();
  return *default_instance_;
}

Update* Update::default_instance_ = NULL;

Update* Update::New(::google::protobuf::Arena* arena) const {
  Update* n = new Update;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Update::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.Update)
  if (GetArenaNoVirtual() == NULL && new_val_ != NULL) delete new_val_;
  new_val_ = NULL;
  old_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.Update)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .bigtable.Value new_val = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_new_val()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_old_val;
        break;
      }

      // optional bytes old_val = 2;
      case 2: {
        if (tag == 18) {
         parse_old_val:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_old_val()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.Update)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.Update)
  return false;
#undef DO_
}

void Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.Update)
  // optional .bigtable.Value new_val = 1;
  if (this->has_new_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->new_val_, output);
  }

  // optional bytes old_val = 2;
  if (this->old_val().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->old_val(), output);
  }

  // @@protoc_insertion_point(serialize_end:bigtable.Update)
}

::google::protobuf::uint8* Update::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.Update)
  // optional .bigtable.Value new_val = 1;
  if (this->has_new_val()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->new_val_, false, target);
  }

  // optional bytes old_val = 2;
  if (this->old_val().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->old_val(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bigtable.Update)
  return target;
}

int Update::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.Update)
  int total_size = 0;

  // optional .bigtable.Value new_val = 1;
  if (this->has_new_val()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->new_val_);
  }

  // optional bytes old_val = 2;
  if (this->old_val().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->old_val());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Update::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.Update)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Update* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Update>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.Update)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.Update)
    MergeFrom(*source);
  }
}

void Update::MergeFrom(const Update& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.Update)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_new_val()) {
    mutable_new_val()->::bigtable::Value::MergeFrom(from.new_val());
  }
  if (from.old_val().size() > 0) {

    old_val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_val_);
  }
}

void Update::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.Update)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Update::CopyFrom(const Update& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.Update)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Update::IsInitialized() const {

  return true;
}

void Update::Swap(Update* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Update::InternalSwap(Update* other) {
  std::swap(new_val_, other->new_val_);
  old_val_.Swap(&other->old_val_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Update_descriptor_;
  metadata.reflection = Update_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Update

// optional .bigtable.Value new_val = 1;
bool Update::has_new_val() const {
  return !_is_default_instance_ && new_val_ != NULL;
}
void Update::clear_new_val() {
  if (GetArenaNoVirtual() == NULL && new_val_ != NULL) delete new_val_;
  new_val_ = NULL;
}
const ::bigtable::Value& Update::new_val() const {
  // @@protoc_insertion_point(field_get:bigtable.Update.new_val)
  return new_val_ != NULL ? *new_val_ : *default_instance_->new_val_;
}
::bigtable::Value* Update::mutable_new_val() {
  
  if (new_val_ == NULL) {
    new_val_ = new ::bigtable::Value;
  }
  // @@protoc_insertion_point(field_mutable:bigtable.Update.new_val)
  return new_val_;
}
::bigtable::Value* Update::release_new_val() {
  // @@protoc_insertion_point(field_release:bigtable.Update.new_val)
  
  ::bigtable::Value* temp = new_val_;
  new_val_ = NULL;
  return temp;
}
void Update::set_allocated_new_val(::bigtable::Value* new_val) {
  delete new_val_;
  new_val_ = new_val;
  if (new_val) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bigtable.Update.new_val)
}

// optional bytes old_val = 2;
void Update::clear_old_val() {
  old_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Update::old_val() const {
  // @@protoc_insertion_point(field_get:bigtable.Update.old_val)
  return old_val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Update::set_old_val(const ::std::string& value) {
  
  old_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bigtable.Update.old_val)
}
 void Update::set_old_val(const char* value) {
  
  old_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bigtable.Update.old_val)
}
 void Update::set_old_val(const void* value, size_t size) {
  
  old_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bigtable.Update.old_val)
}
 ::std::string* Update::mutable_old_val() {
  
  // @@protoc_insertion_point(field_mutable:bigtable.Update.old_val)
  return old_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Update::release_old_val() {
  // @@protoc_insertion_point(field_release:bigtable.Update.old_val)
  
  return old_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Update::set_allocated_old_val(::std::string* old_val) {
  if (old_val != NULL) {
    
  } else {
    
  }
  old_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), old_val);
  // @@protoc_insertion_point(field_set_allocated:bigtable.Update.old_val)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.Response)
}

void Response::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Response::Response(const Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bigtable.Response)
}

void Response::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:bigtable.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_descriptor_;
}

const Response& Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bigtable_2eproto();
  return *default_instance_;
}

Response* Response::default_instance_ = NULL;

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.Response)
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigtable.Response.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.Response)
  // optional string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.Response.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:bigtable.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.Response)
  // optional string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigtable.Response.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bigtable.Response)
  return target;
}

int Response::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.Response)
  int total_size = 0;

  // optional string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.Response)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.Response)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {

  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_descriptor_;
  metadata.reflection = Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response

// optional string msg = 1;
void Response::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Response::msg() const {
  // @@protoc_insertion_point(field_get:bigtable.Response.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bigtable.Response.msg)
}
 void Response::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bigtable.Response.msg)
}
 void Response::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bigtable.Response.msg)
}
 ::std::string* Response::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:bigtable.Response.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response::release_msg() {
  // @@protoc_insertion_point(field_release:bigtable.Response.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:bigtable.Response.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigtable.Empty)
}

void Empty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bigtable.Empty)
}

void Empty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:bigtable.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Empty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Empty_descriptor_;
}

const Empty& Empty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bigtable_2eproto();
  return *default_instance_;
}

Empty* Empty::default_instance_ = NULL;

Empty* Empty::New(::google::protobuf::Arena* arena) const {
  Empty* n = new Empty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:bigtable.Empty)
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigtable.Empty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:bigtable.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigtable.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigtable.Empty)
  // @@protoc_insertion_point(serialize_end:bigtable.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bigtable.Empty)
  // @@protoc_insertion_point(serialize_to_array_end:bigtable.Empty)
  return target;
}

int Empty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:bigtable.Empty)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigtable.Empty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Empty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigtable.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigtable.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigtable.Empty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigtable.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigtable.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {

  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Empty_descriptor_;
  metadata.reflection = Empty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Empty

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace bigtable

// @@protoc_insertion_point(global_scope)
